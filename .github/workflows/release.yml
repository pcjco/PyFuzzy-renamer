name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_release:
    name: build_release
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: version
        run: echo "version=${{ github.ref_name }}" >> "$env:GITHUB_OUTPUT"
        id: version
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build artifact with pyinstaller
        run: |
          pip install pyinstaller
          pyinstaller --name PyFuzzy-renamer --icon pyfuzzyrenamer.ico pyfuzzyrenamer\__main__.py
      - name: Zip artifact
        run: Compress-Archive -Path dist/PyFuzzy-renamer/* -Destination pyfuzzyrenamer-${{ steps.version.outputs.version }}.windows-amd64.zip
      - name: Release Notes
        run: |
          awk -v ver=$(echo ${{ steps.version.outputs.version }} | sed -E 's/^.*v([0-9.]*).*$/\1/') '/^## Version / { if (p) { exit }; if ($3 == ver) { p=1; next } } p && NF' CHANGELOG.md > CHANGELOG-${{ steps.version.outputs.version }}.md
        shell: bash
      - name: release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          artifacts: "pyfuzzyrenamer-${{ steps.version.outputs.version }}.windows-amd64.zip"
          replacesArtifacts: false
          allowUpdates: true
          bodyFile: CHANGELOG-${{ steps.version.outputs.version }}.md
